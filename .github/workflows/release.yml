env:
  GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
  OSS_PASSWORD: ${{ secrets.OSS_PASSWORD }}
  OSS_USERNAME: ${{ secrets.OSS_USERNAME }}
jobs:
  docker:
    needs: release
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.releaseVersion }}
    - continue-on-error: true
      name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - continue-on-error: true
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - continue-on-error: true
      name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
    - continue-on-error: true
      name: Build & Push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: false
        tags: 'openapitools/openapi-diff:${{ github.event.inputs.releaseVersion }}

          openapitools/openapi-diff:latest

          '
  release:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        cache: maven
        distribution: zulu
        gpg-passphrase: GPG_PASSPHRASE
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
        java-version: 11
        server-id: sonatype-nexus-staging
        server-password: OSS_PASSWORD
        server-username: OSS_USERNAME
    - continue-on-error: true
      name: Setup Git
      run: 'git config --global committer.email "noreply@github.com"

        git config --global committer.name "GitHub Release"

        git config --global author.email "${GITHUB_ACTOR}@users.noreply.github.com"

        git config --global author.name "${GITHUB_ACTOR}"

        '
    - continue-on-error: true
      name: Release
      run: ./mvnw -V -B -ntp -Prelease -DreleaseVersion=${{ github.event.inputs.releaseVersion
        }} -DdevelopmentVersion=${{ github.event.inputs.developmentVersion }} release:prepare
        release:perform
    - continue-on-error: true
      if: ${{ failure() }}
      name: Rollback on failure
      run: './mvnw -B release:rollback -Prelease -Dgpg.passphrase=${{secrets.GPG_PASSPHRASE}}

        echo "You may need to manually delete the GitHub tag, if it was created."

        '
name: Triggered Release
on:
  repository_dispatch:
    types: trigger-ga___release.yml
